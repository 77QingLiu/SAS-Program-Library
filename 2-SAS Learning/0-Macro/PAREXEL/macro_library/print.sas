%MACRO print( file=, txt=txt, log=log, append=, Prod=_gProd, prgname=_prgname,
         RET=_NULL_);

%******************************************************************************;
%*                          PAREXEL INTERNATIONAL LTD                          ;
%*                                                                             ;
%* CLIENT:            PAREXEL                                                  ;
%*                                                                             ;
%* PROJECT:           PRINT macro                                              ;
%*                                                                             ;
%* TIMS CODE:         56981                                                    ;
%*                                                                             ;
%* SOPS FOLLOWED:     1213                                                     ;
%*                                                                             ;
%******************************************************************************;
%*                                                                             ;
%* PROGRAM NAME:      print.sas                                                ;
%*                                                                             ;
%* PROGRAM LOCATION:  /opt/pxlcommon/stats/macros/sas/code/print/ver002        ;
%*                                                                             ;
%******************************************************************************;
%*                                                                             ;
%* USER REQUIREMENTS: Macro for diversion of SAS text output and SAS log       ;
%*                    to external files                                        ;
%*                                                                             ;
%* TECHNICAL          The macro calls the PRINTTO procedure and manages the    ;
%* SPECIFICATIONS:    NEW option to create a new output file or to append.     ;
%*                    A global macro variable will be created containing       ;
%*                    the program name, which will be used by another macro    ;
%*                    footnote to display in a standard footnote.              ;
%*                                                                             ;
%* EXAMPLE:                                                                    ;
%*  %print(file=&_apps..t_AEs)                                                 ;
%*                                                                             ;
%* INPUT:             Macro Parameters:                                        ;
%*     file    - full pathname of the external files without extension         ;
%*     txt     - extension of the external filename for                        ;
%*               the OUTPUT file                                               ;
%*               Default = txt                                                 ;
%*     log     - extension of the external filename for                        ;
%*               the SAS log file                                              ;
%*               Default = log                                                 ;
%*     append  - toggles the NEW option of PROC PRINTTO                        ;
%*               YES = output will be append                                   ;
%*               OTHERWISE = a new output file will be created                 ;
%*               Default = BLANK                                               ;
%*     Prod    - name of a global macro variable (without                      ;
%*               the ampersand!) which refers to a global macro variable       ;
%*               which toggles the Production mode                             ;
%*               0 = output will not be diverted                               ;
%*               1 = output will     be diverted                               ;
%*               Default = &_gProd                                             ;
%*                                                                             ;
%* OUTPUT:                                                                     ;
%*     &file..&txt - physical file containing the OUTPUT (PRINT)               ;
%*     &file..&log - physical file containing the LOG                          ;
%*     prgname - name of a global macro variable (without                      ;
%*               the ampersand!) which refers to a global macro variable       ;
%*               which contains the name of the program                        ;
%*               Default = &_prgname                                           ;
%*     RET     - name of a global macro variable (without                      ;
%*               the ampersand!) which refers to the                           ;
%*               return code for error handling                                ;
%*               if the global macro                                           ;
%*               variable does not exist it will be                            ;
%*               created                                                       ;
%*               &RET = 0 no error occurred                                    ;
%*               &RET = 1 an error occurred                                    ;
%*               Default = _NULL_                                              ;
%*                                                                             ;
%* PROGRAMS CALLED:   N/A                                                      ;
%*                                                                             ;
%* ASSUMPTIONS/       N/A                                                      ;
%* REFERENCES                                                                  ;
%*                                                                             ;
%******************************************************************************;
%*                                                                             ;
%* MODIFICATION HISTORY                                                        ;
%*-----------------------------------------------------------------------------;
%* VERSION:           1                                                        ;
%* AUTHOR:            Ralf Ludwig (B&P Berlin)                                 ;
%* QC BY:             N/A                                                      ;
%*                                                                             ;
%*-----------------------------------------------------------------------------;
%* VERSION:           2                                                        ;
%*                                                                             ;
%* RISK ASSESSMENT                                                             ;
%* Business:          High   [ ]: System has direct impact on the provision of ;
%*                                business critical services either globally   ;
%*                                or at a regional level.                      ;
%*                    Medium [X]: System has direct impact on the provision of ;
%*                                business critical services at a local level  ;
%*                                only.                                        ;
%*                    Low    [ ]: System used to indirectly support the        ;
%*                                provision of a business critical service or  ;
%*                                operation at a global, regional or local     ;
%*                                level.                                       ;
%*                    None   [ ]: System has no impact on the provision of a   ;
%*                                business critical service or operation.      ;
%*                                                                             ;
%* Regulatory:        High   [ ]: System has a direct impact on GxP data and/  ;
%*                                or directly supports a GxP process.          ;
%*                    Medium [X]: System has an indirect impact on GxP data    ;
%*                                and supports a GxP process.                  ;
%*                    Low    [ ]: System has an indirect impact on GxP data or ;
%*                                supports a GxP process.                      ;
%*                    None   [ ]: System is not involved directly or           ;
%*                                indirectly with GxP data or a GxP process.   ;
%*                                                                             ;
%* REASON FOR CHANGE: 1) Validation of program to standards required by        ;
%*                       WSOP 1213.                                            ;
%*                    2) No changes to code required.                          ;
%*                                                                             ;
%* TESTING            Peer code review and review of test output created by    ;
%* METHODOLOGY:       Q:\Programming Steering Committee\SoftwareValidation\    ;
%*                    Software\SASMacros\Pageno\paging3_Val.sas                ;
%*                                                                             ;
%* DEVELOPER:         Ralf Ludwig (B&P Berlin)          Date : 15/06/2005      ;
%*                                                                             ;
%* SIGNATURE:         ................................  Date : ............... ;
%*                                                                             ;
%* CODE REVIEWER:     Frank Schuetz (B&P Berlin)        Date : 01/07/2005      ;
%*                                                                             ;
%* SIGNATURE:         ................................  Date : ............... ;
%*                                                                             ;
%* USER:              Frank Schuetz (B&P Berlin)        Date : 01/07/2005      ;
%*                                                                             ;
%* SIGNATURE:         ................................  Date : ............... ;
%*                                                                             ;
%******************************************************************************;

   %*** return value for error handling ***;
   %IF %UPCASE(&Ret.) EQ %STR(RET) %THEN %DO;
      %PUT %STR(ER)%STR(ROR:) (Footnote): Names conflict - MACRO parameter RET must not named as RET.;
      %GOTO Ende;
   %END;

   %GLOBAL &Ret.;
   %LET &Ret.=1;

   %*** prgname ***;
   %IF %UPCASE(&prgname.) EQ %STR(PRGNAME) %THEN %DO;
      %PUT %STR(ER)%STR(ROR:) (print): Names conflict - MACRO parameter PRGNAME must not named as PRGNAME.;
      %GOTO Ende;
   %END;

   %*** production mode ***;
   %IF %UPCASE(&Prod.) EQ %STR(PROD) %THEN %DO;
      %PUT %STR(ER)%STR(ROR:) (print): Names conflict - MACRO parameter Prod must not named as Prod.;
      %GOTO Ende;
   %END;

   %GLOBAL &Prod;
   %IF %QUOTE(&&&Prod)=%STR( ) %THEN %LET &Prod=1;

   %IF &&&Prod=1 %THEN %DO;
      %IF %QUOTE(&file) EQ %STR( ) %THEN %DO;
         PROC PRINTTO;
         RUN;
      %END;
      %ELSE %DO;
         %IF %UPCASE(%QUOTE(&append))=%STR( )  %THEN %DO;
            PROC PRINTTO PRINT = "&file..&txt"
                         LOG   = "&file..&log" NEW;
            RUN;
         %END;
         %ELSE %DO;
            PROC PRINTTO PRINT = "&file..&txt"
                         LOG   = "&file..&log" ;
            RUN;
         %END;

         %GLOBAL &prgname;
         %LET &prgname = %QUOTE(&file);

      %END;
   %END;

   %LET &Ret.=0;

   %Ende:
   %*;
   %*End;
   %*;
%MEND print;
