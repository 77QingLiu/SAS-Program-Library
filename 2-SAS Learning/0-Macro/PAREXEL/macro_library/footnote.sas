%MACRO Footnote(text=, num=foot__, left=, ls=_linesize, prgname=_prgname, ini=, RET=_NULL_);

%******************************************************************************;
%*                          PAREXEL INTERNATIONAL LTD                          ;
%*                                                                             ;
%* CLIENT:            PAREXEL                                                  ;
%*                                                                             ;
%* PROJECT:           Footnote macro                                           ;
%*                                                                             ;
%* TIMS CODE:         56981                                                    ;
%*                                                                             ;
%* SOPS FOLLOWED:     1213                                                     ;
%*                                                                             ;
%******************************************************************************;
%*                                                                             ;
%* PROGRAM NAME:      footnote.sas                                             ;
%*                                                                             ;
%* PROGRAM LOCATION:  /opt/pxlcommon/stats/macros/sas/code/footnote/ver002     ;
%*                                                                             ;
%******************************************************************************;
%*                                                                             ;
%* USER REQUIREMENTS: Macro to provide a standard footnote                     ;
%*                                                                             ;
%*                                                                             ;
%*                                                                             ;
%* TECHNICAL          The macro provides SAS footnote statements, whereas the  ;
%* SPECIFICATIONS:    bottom line (last footnote statement) contains           ;
%*                    program specific data as name of the output file date    ;
%*                    and time of the run and programmers initials.            ;
%* EXAMPLE1:                                                                   ;
%*      %footnote(text=Note: This is a footnote text over )                    ;
%*      %footnote(text=      more than one rows.)                              ;
%*                                                                             ;
%* EXAMPLE2:                                                                   ;
%*      %footnote( )                                                           ;
%*      resets the footnotes to the standard footnote                          ;
%*                                                                             ;
%* INPUT:             Macro Parameters:                                        ;
%*                        text    - footnote text                              ;
%*                        num     - number of the row or footnote              ;
%*                                  Default = &foot__                          ;
%*                        left    - text for the left side of the standard     ;
%*                                  footnote row on the bottom line            ;
%*                                  Default = BLANK                            ;
%*                        ls      - name of a global macro variable (without   ;
%*                                  the ampersand!) which refers to the        ;
%*                                  linesize.                                  ;
%*                                  if the global macro                        ;
%*                                  variable does not exist it will be         ;
%*                                  created                                    ;
%*                                  Default = _linesize                        ;
%*                                  Default (&_linesize) = 80                  ;
%*                        prgname - name of the program                        ;
%*                                  Default = _prgname                         ;
%*                                  Default (&_prgname) = BLANK                ;
%*                        ini     - programmers initials                       ;
%*                                  Default = BLANK                            ;
%*                                                                             ;
%* OUTPUT:                                                                     ;
%*                        RET     - name of a global macro variable (without   ;
%*                                  the ampersand!) which refers to the        ;
%*                                  return code for error handling             ;
%*                                  if the global macro                        ;
%*                                  variable does not exist it will be         ;
%*                                  created                                    ;
%*                                  &RET = 0 no error occurred                 ;
%*                                  &RET = 1 an error occurred                 ;
%*                                  Default = _NULL_                           ;
%*                                                                             ;
%* PROGRAMS CALLED:   N/A                                                      ;
%*                                                                             ;
%* ASSUMPTIONS/                                                                ;
%* REFERENCES                                                                  ;
%*                                                                             ;
%******************************************************************************;
%*                                                                             ;
%* MODIFICATION HISTORY                                                        ;
%*-----------------------------------------------------------------------------;
%* VERSION:           1                                                        ;
%* AUTHOR:            Ralf Ludwig (B&P Berlin)                                 ;
%* QC BY:             N/A                                                      ;
%*                                                                             ;
%*-----------------------------------------------------------------------------;
%* VERSION:           2                                                        ;
%*                                                                             ;
%* RISK ASSESSMENT                                                             ;
%* Business:          High   [ ]: System has direct impact on the provision of ;
%*                                business critical services either globally   ;
%*                                or at a regional level.                      ;
%*                    Medium [X]: System has direct impact on the provision of ;
%*                                business critical services at a local level  ;
%*                                only.                                        ;
%*                    Low    [ ]: System used to indirectly support the        ;
%*                                provision of a business critical service or  ;
%*                                operation at a global, regional or local     ;
%*                                level.                                       ;
%*                    None   [ ]: System has no impact on the provision of a   ;
%*                                business critical service or operation.      ;
%*                                                                             ;
%* Regulatory:        High   [ ]: System has a direct impact on GxP data and/  ;
%*                                or directly supports a GxP process.          ;
%*                    Medium [X]: System has an indirect impact on GxP data    ;
%*                                and supports a GxP process.                  ;
%*                    Low    [ ]: System has an indirect impact on GxP data or ;
%*                                supports a GxP process.                      ;
%*                    None   [ ]: System is not involved directly or           ;
%*                                indirectly with GxP data or a GxP process.   ;
%*                                                                             ;
%* REASON FOR CHANGE: 1) Validation of program to standards required by        ;
%*                       WSOP 1213.                                            ;
%*                    2) No changes to code required.                          ;
%*                                                                             ;
%* TESTING            Peer code review and review of test output created by    ;
%* METHODOLOGY:       Q:\Programming Steering Committee\SoftwareValidation\    ;
%*                    Software\SASMacros\Pageno\Footnote_Val.sas               ;
%*                                                                             ;
%* DEVELOPER:         Ralf Ludwig (B&P Berlin)          Date : N/A             ;
%*                                                                             ;
%* SIGNATURE:         ................................  Date : ............... ;
%*                                                                             ;
%* CODE REVIEWER:     Frank Schuetz (B&P Berlin)        Date : 18/05/2005      ;
%*                                                                             ;
%* SIGNATURE:         ................................  Date : ............... ;
%*                                                                             ;
%* USER:              Frank Schuetz (B&P Berlin)        Date : 18/05/2005      ;
%*                                                                             ;
%* SIGNATURE:         ................................  Date : ............... ;
%*                                                                             ;
%******************************************************************************;

   %*** return value for error handling ***;
   %IF %UPCASE(&Ret.) EQ %STR(RET) %THEN %DO;
      %PUT %STR(ER)%STR(ROR:) (Footnote): Names conflict - MACRO parameter RET must not named as RET.;
      %GOTO Ende;
   %END;

   %GLOBAL &Ret.;
   %LET &Ret.=1;

   %*** linesize ***;
   %IF %UPCASE(&ls.) EQ %STR(LS) %THEN %DO;
      %PUT %STR(ER)%STR(ROR:) (Footnote): Names conflict - MACRO parameter ls must not named as LS.;
      %GOTO Ende;
   %END;

   %GLOBAL &ls;
   %IF %STR(&&&ls)=%STR( ) %THEN %LET &ls=80;

   %*** prgname ***;
   %IF %UPCASE(&prgname.) EQ %STR(PRGNAME) %THEN %DO;
      %PUT %STR(ER)%STR(ROR:) (Footnote): Names conflict - MACRO parameter PRGNAME must not named as PRGNAME.;
      %GOTO Ende;
   %END;

   %GLOBAL &prgname;

   %*** num ***;
   %IF %UPCASE(&num.) EQ %STR(NUM) %THEN %DO;
      %PUT %STR(ER)%STR(ROR:) (Footnote): Names conflict - MACRO parameter NUM must not named as NUM.;
      %GOTO Ende;
   %END;

   %GLOBAL &num;

   %*;
   %*IF text;
   %*;
   %IF %STR(&text) NE %STR( ) %THEN %DO;
      %*;
      %*Standard footnote to position other than 1;
      %*;
      %IF %STR(&text) EQ %STR(STANDARD) %THEN %DO;
         %LET &num = %EVAL(&&&num - 1);
      %END;
      %ELSE %DO;
         %LET &num = &&&num;
         FOOTNOTE&&&num "%STR(&text)";
         %LET &num = %EVAL(&&&num + 1);
      %END;
   %END;
   %ELSE %DO;
      %LET &num = 1;
   %END;

   %LOCAL footnote;
   data _NULL_;
      length right foot $ &&&ls..;
      left="&left";
      datum=put(datetime(),datetime14.);
      right=right(datum||"  &&&prgname  &ini");
      ll=length(left);
      rr=length(right);
      foot=left||repeat(' ',(&&&ls-rr-ll-3))||right;
      call symput('left',TRIMN(left));
      call symput('right',TRIMN(right));
      call symput('footnote',foot);
   run;


   %IF &&&num GT 1 %THEN %DO;
         FOOTNOTE%EVAL(&&&num + 1) "%STR(&footnote)";
   %END;
   %ELSE %DO;
         FOOTNOTE&&&num "%STR(&footnote)";
   %END;

   %LET &Ret.=0;

   %Ende:
   %*;
   %*End;
   %*;


%MEND Footnote;
